{
	"id": "11f062775ea59e641cf9e6117b784b70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"problem.sol": {
				"content": "pragma solidity ^0.5.16;\n\ncontract Lottery {\n    uint totalMoney = 0; // total money of expenditures\n    address mainAcount; // account of the company\n    Customer[] customers; // all customers\n\n    struct Customer { // customer to be joined\n        uint spent; // the amount of expenditure\n        address account; // the account\n    }\n\n    function buy(uint price) public {\n        require(price > 0, \"For joining the lottery, expenditure is mandatory.\");\n        Customer memory person = Customer(price, msg.sender);\n        customers.push(person);\n        totalMoney += price;\n    }\n\n    modifier checkTime() {\n        require(now > 1685286000, \"The specified time hasn't yet passed\"); // the time to be passed --> 28 May 2023 | 18:00:00\n        _;\n    }\n\n    function makeTheDraw() public checkTime {\n        uint award = (totalMoney/100)*10; // %10 of total expenditure\n        // choose randomly a customer\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"problem.sol": {
				"Lottery": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "makeTheDraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"problem.sol\":26:921  contract Lottery {... */\n  mstore(0x40, 0x80)\n    /* \"problem.sol\":67:68  0 */\n  0x00\n    /* \"problem.sol\":49:68  uint totalMoney = 0 */\n  dup1\n  sstore\n    /* \"problem.sol\":26:921  contract Lottery {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"problem.sol\":26:921  contract Lottery {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"problem.sol\":26:921  contract Lottery {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"problem.sol\":26:921  contract Lottery {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16ace61f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"problem.sol\":764:919  function makeTheDraw() public checkTime {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"problem.sol\":342:586  function buy(uint price) public {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"problem.sol\":342:586  function buy(uint price) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"problem.sol\":764:919  function makeTheDraw() public checkTime {... */\n    tag_6:\n        /* \"problem.sol\":637:647  1685286000 */\n      0x64736c70\n        /* \"problem.sol\":631:634  now */\n      timestamp\n        /* \"problem.sol\":631:647  now > 1685286000 */\n      gt\n        /* \"problem.sol\":623:688  require(now > 1685286000, \"The specified time hasn't yet passed\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5b2f8845a2f33c2a3301aba1713f35da97b2ab7e7bbe02d488edc3f33f6c135c\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"problem.sol\":814:824  uint award */\n      0x00\n        /* \"problem.sol\":844:846  10 */\n      0x0a\n        /* \"problem.sol\":839:842  100 */\n      0x64\n        /* \"problem.sol\":828:838  totalMoney */\n      sload(0x00)\n        /* \"problem.sol\":828:842  totalMoney/100 */\n      dup2\n      tag_13\n      jumpi\n      invalid\n    tag_13:\n      div\n        /* \"problem.sol\":827:846  (totalMoney/100)*10 */\n      mul\n        /* \"problem.sol\":814:846  uint award = (totalMoney/100)*10 */\n      swap1\n      pop\n        /* \"problem.sol\":750:751  _ */\n      pop\n        /* \"problem.sol\":764:919  function makeTheDraw() public checkTime {... */\n      jump\t// out\n        /* \"problem.sol\":342:586  function buy(uint price) public {... */\n    tag_9:\n        /* \"problem.sol\":400:401  0 */\n      0x00\n        /* \"problem.sol\":392:397  price */\n      dup2\n        /* \"problem.sol\":392:401  price > 0 */\n      gt\n        /* \"problem.sol\":384:456  require(price > 0, \"For joining the lottery, expenditure is mandatory.\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_aa2479975c0cab002dd685c50fd181886f931f98ef0585272d8da2cea21e347d\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"problem.sol\":466:488  Customer memory person */\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"problem.sol\":491:518  Customer(price, msg.sender) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"problem.sol\":500:505  price */\n      dup4\n        /* \"problem.sol\":491:518  Customer(price, msg.sender) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"problem.sol\":507:517  msg.sender */\n      caller\n        /* \"problem.sol\":491:518  Customer(price, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"problem.sol\":466:518  Customer memory person = Customer(price, msg.sender) */\n      swap1\n      pop\n        /* \"problem.sol\":528:537  customers */\n      0x02\n        /* \"problem.sol\":543:549  person */\n      dup2\n        /* \"problem.sol\":528:550  customers.push(person) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"problem.sol\":528:550  customers.push(person) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"problem.sol\":574:579  price */\n      dup2\n        /* \"problem.sol\":560:570  totalMoney */\n      0x00\n      dup1\n        /* \"problem.sol\":560:579  totalMoney += price */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"problem.sol\":342:586  function buy(uint price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"problem.sol\":26:921  contract Lottery {... */\n    tag_17:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_5b2f8845a2f33c2a3301aba1713f35da97b2ab7e7bbe02d488edc3f33f6c135c 546865207370656369666965642074696d65206861736e27742079657420706173736564\n    data_aa2479975c0cab002dd685c50fd181886f931f98ef0585272d8da2cea21e347d 466f72206a6f696e696e6720746865206c6f74746572792c20657870656e646974757265206973206d616e6461746f72792e\n\n    auxdata: 0xa265627a7a72315820945ee652b4fe0082ffc2dd6f3ef4f52fb3f4f41cdadfc98174a1bac2589dfe4d64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805534801561001457600080fd5b506102c4806100246000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806316ace61f1461003b578063d96a094a14610045575b600080fd5b610043610073565b005b6100716004803603602081101561005b57600080fd5b81019080803590602001909291905050506100e6565b005b6364736c7042116100cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061023a6024913960400191505060405180910390fd5b6000600a6064600054816100df57fe5b0402905050565b6000811161013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061025e6032913960400191505060405180910390fd5b610147610209565b60405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509050600281908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508160008082825401925050819055505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152509056fe546865207370656369666965642074696d65206861736e27742079657420706173736564466f72206a6f696e696e6720746865206c6f74746572792c20657870656e646974757265206973206d616e6461746f72792ea265627a7a72315820945ee652b4fe0082ffc2dd6f3ef4f52fb3f4f41cdadfc98174a1bac2589dfe4d64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16ACE61F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x64736C70 TIMESTAMP GT PUSH2 0xCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x64 PUSH1 0x0 SLOAD DUP2 PUSH2 0xDF JUMPI INVALID JUMPDEST DIV MUL SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP INVALID SLOAD PUSH9 0x652073706563696669 PUSH6 0x642074696D65 KECCAK256 PUSH9 0x61736E277420796574 KECCAK256 PUSH17 0x6173736564466F72206A6F696E696E6720 PUSH21 0x6865206C6F74746572792C20657870656E64697475 PUSH19 0x65206973206D616E6461746F72792EA265627A PUSH27 0x72315820945EE652B4FE0082FFC2DD6F3EF4F52FB3F4F41CDADFC9 DUP2 PUSH21 0xA1BAC2589DFE4D64736F6C63430005110032000000 ",
							"sourceMap": "26:895:0:-;;;67:1;49:19;;26:895;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:895:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806316ace61f1461003b578063d96a094a14610045575b600080fd5b610043610073565b005b6100716004803603602081101561005b57600080fd5b81019080803590602001909291905050506100e6565b005b6364736c7042116100cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061023a6024913960400191505060405180910390fd5b6000600a6064600054816100df57fe5b0402905050565b6000811161013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061025e6032913960400191505060405180910390fd5b610147610209565b60405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509050600281908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508160008082825401925050819055505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152509056fe546865207370656369666965642074696d65206861736e27742079657420706173736564466f72206a6f696e696e6720746865206c6f74746572792c20657870656e646974757265206973206d616e6461746f72792ea265627a7a72315820945ee652b4fe0082ffc2dd6f3ef4f52fb3f4f41cdadfc98174a1bac2589dfe4d64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16ACE61F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x64736C70 TIMESTAMP GT PUSH2 0xCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x64 PUSH1 0x0 SLOAD DUP2 PUSH2 0xDF JUMPI INVALID JUMPDEST DIV MUL SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x147 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP INVALID SLOAD PUSH9 0x652073706563696669 PUSH6 0x642074696D65 KECCAK256 PUSH9 0x61736E277420796574 KECCAK256 PUSH17 0x6173736564466F72206A6F696E696E6720 PUSH21 0x6865206C6F74746572792C20657870656E64697475 PUSH19 0x65206973206D616E6461746F72792EA265627A PUSH27 0x72315820945EE652B4FE0082FFC2DD6F3EF4F52FB3F4F41CDADFC9 DUP2 PUSH21 0xA1BAC2589DFE4D64736F6C63430005110032000000 ",
							"sourceMap": "26:895:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:895:0;;;;;;;;;;;;;;;;;;;;;;;;764:155;;;:::i;:::-;;342:244;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;342:244:0;;;;;;;;;;;;;;;;;:::i;:::-;;764:155;637:10;631:3;:16;623:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:10;844:2;839:3;828:10;;:14;;;;;;827:19;814:32;;750:1;764:155::o;342:244::-;400:1;392:5;:9;384:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:22;;:::i;:::-;491:27;;;;;;;;500:5;491:27;;;;507:10;491:27;;;;;466:52;;528:9;543:6;528:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;528:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:5;560:10;;:19;;;;;;;;;;;342:244;;:::o;26:895::-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "141600",
								"executionCost": "5196",
								"totalCost": "146796"
							},
							"external": {
								"buy(uint256)": "infinite",
								"makeTheDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 921,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "MSTORE"
								},
								{
									"begin": 67,
									"end": 68,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 49,
									"end": 68,
									"name": "DUP1"
								},
								{
									"begin": 49,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 921,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820945ee652b4fe0082ffc2dd6f3ef4f52fb3f4f41cdadfc98174a1bac2589dfe4d64736f6c63430005110032",
									".code": [
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "POP"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "SHR"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "16ACE61F"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "D96A094A"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "REVERT"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "JUMPDEST"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "JUMPDEST"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "STOP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SWAP3"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SWAP2"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "STOP"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 647,
											"name": "PUSH",
											"value": "64736C70"
										},
										{
											"begin": 631,
											"end": 634,
											"name": "TIMESTAMP"
										},
										{
											"begin": 631,
											"end": 647,
											"name": "GT"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "MLOAD"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP3"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "SUB"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP3"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH data",
											"value": "5B2F8845A2F33C2A3301ABA1713F35DA97B2AB7E7BBE02D488EDC3F33F6C135C"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "CODECOPY"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "POP"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "POP"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "MLOAD"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "SUB"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "REVERT"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 623,
											"end": 688,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 839,
											"end": 842,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 828,
											"end": 838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 828,
											"end": 838,
											"name": "SLOAD"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "DUP2"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "INVALID"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "JUMPDEST"
										},
										{
											"begin": 828,
											"end": 842,
											"name": "DIV"
										},
										{
											"begin": 827,
											"end": 846,
											"name": "MUL"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "POP"
										},
										{
											"begin": 764,
											"end": 919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "DUP2"
										},
										{
											"begin": 392,
											"end": 401,
											"name": "GT"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "JUMPI"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "SUB"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "MSTORE"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH data",
											"value": "AA2479975C0CAB002DD685C50FD181886F931F98EF0585272D8DA2CEA21E347D"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "CODECOPY"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "ADD"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "POP"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "MLOAD"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "DUP1"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "SWAP2"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "SUB"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "SWAP1"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "REVERT"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 466,
											"end": 488,
											"name": "JUMPDEST"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "MLOAD"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "ADD"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP4"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "DUP2"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 517,
											"name": "CALLER"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "AND"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "DUP2"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "MSTORE"
										},
										{
											"begin": 491,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 537,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP3"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SSTORE"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "NOT"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "OR"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "SSTORE"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 528,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 579,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 560,
											"end": 570,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "SLOAD"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "SWAP3"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "SSTORE"
										},
										{
											"begin": 560,
											"end": 579,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 586,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "ADD"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "ADD"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "AND"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "POP"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 921,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"5B2F8845A2F33C2A3301ABA1713F35DA97B2AB7E7BBE02D488EDC3F33F6C135C": "546865207370656369666965642074696d65206861736e27742079657420706173736564",
										"AA2479975C0CAB002DD685C50FD181886F931F98EF0585272D8DA2CEA21E347D": "466f72206a6f696e696e6720746865206c6f74746572792c20657870656e646974757265206973206d616e6461746f72792e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"buy(uint256)": "d96a094a",
							"makeTheDraw()": "16ace61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"makeTheDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"problem.sol\":\"Lottery\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"problem.sol\":{\"keccak256\":\"0xf1bd8f70bd107b168589da3f7b109bbea26f61a3832d168820d4e4183e76737b\",\"urls\":[\"bzz-raw://55c64635bf5bc22e85f4ca8c5fcc6d3d3105e7d1cdcc98574694a6a6cd2558a6\",\"dweb:/ipfs/QmfFDCdkgSmvDnm4wy341FW2WgwRT3LP56ZU4nr961bMg3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "problem.sol:Lottery",
								"label": "totalMoney",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 6,
								"contract": "problem.sol:Lottery",
								"label": "mainAcount",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "problem.sol:Lottery",
								"label": "customers",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Customer)14_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Customer)14_storage)dyn_storage": {
								"base": "t_struct(Customer)14_storage",
								"encoding": "dynamic_array",
								"label": "struct Lottery.Customer[]",
								"numberOfBytes": "32"
							},
							"t_struct(Customer)14_storage": {
								"encoding": "inplace",
								"label": "struct Lottery.Customer",
								"members": [
									{
										"astId": 11,
										"contract": "problem.sol:Lottery",
										"label": "spent",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 13,
										"contract": "problem.sol:Lottery",
										"label": "account",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "problem.sol:26:9: Warning: Unused local variable.\n        uint award = (totalMoney/100)*10; // %10 of total expenditure\n        ^--------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 824,
					"file": "problem.sol",
					"start": 814
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "problem.sol:25:5: Warning: Function state mutability can be restricted to view\n    function makeTheDraw() public checkTime {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 919,
					"file": "problem.sol",
					"start": 764
				},
				"type": "Warning"
			}
		],
		"sources": {
			"problem.sol": {
				"ast": {
					"absolutePath": "problem.sol",
					"exportedSymbols": {
						"Lottery": [
							72
						]
					},
					"id": 73,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 72,
							"linearizedBaseContracts": [
								72
							],
							"name": "Lottery",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "totalMoney",
									"nodeType": "VariableDeclaration",
									"scope": 72,
									"src": "49:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "49:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "67:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"name": "mainAcount",
									"nodeType": "VariableDeclaration",
									"scope": 72,
									"src": "105:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "105:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"name": "customers",
									"nodeType": "VariableDeclaration",
									"scope": 72,
									"src": "155:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Customer_$14_storage_$dyn_storage",
										"typeString": "struct Lottery.Customer[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 7,
											"name": "Customer",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 14,
											"src": "155:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Customer_$14_storage_ptr",
												"typeString": "struct Lottery.Customer"
											}
										},
										"id": 8,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "155:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Customer_$14_storage_$dyn_storage_ptr",
											"typeString": "struct Lottery.Customer[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "Lottery.Customer",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 11,
											"name": "spent",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "250:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 10,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "250:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"name": "account",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "299:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "299:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Customer",
									"nodeType": "StructDefinition",
									"scope": 72,
									"src": "199:137:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "374:212:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 20,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "392:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "400:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "392:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "466f72206a6f696e696e6720746865206c6f74746572792c20657870656e646974757265206973206d616e6461746f72792e",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "403:52:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa2479975c0cab002dd685c50fd181886f931f98ef0585272d8da2cea21e347d",
																"typeString": "literal_string \"For joining the lottery, expenditure is mandatory.\""
															},
															"value": "For joining the lottery, expenditure is mandatory."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa2479975c0cab002dd685c50fd181886f931f98ef0585272d8da2cea21e347d",
																"typeString": "literal_string \"For joining the lottery, expenditure is mandatory.\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															90,
															91
														],
														"referencedDeclaration": 91,
														"src": "384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "384:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "384:72:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"name": "person",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "466:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Customer_$14_memory_ptr",
															"typeString": "struct Lottery.Customer"
														},
														"typeName": {
															"contractScope": null,
															"id": 26,
															"name": "Customer",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 14,
															"src": "466:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Customer_$14_storage_ptr",
																"typeString": "struct Lottery.Customer"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 29,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "500:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "507:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "507:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 28,
														"name": "Customer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "491:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Customer_$14_storage_ptr_$",
															"typeString": "type(struct Lottery.Customer storage pointer)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Customer_$14_memory",
														"typeString": "struct Lottery.Customer memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "466:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 37,
															"name": "person",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "543:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Customer_$14_memory_ptr",
																"typeString": "struct Lottery.Customer memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Customer_$14_memory_ptr",
																"typeString": "struct Lottery.Customer memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "customers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "528:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Customer_$14_storage_$dyn_storage",
																"typeString": "struct Lottery.Customer storage ref[] storage ref"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "528:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Customer_$14_storage_$returns$_t_uint256_$",
															"typeString": "function (struct Lottery.Customer storage ref) returns (uint256)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "528:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "528:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "totalMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "560:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 41,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "574:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "560:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "560:19:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "355:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "355:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "354:12:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:0:0"
									},
									"scope": 72,
									"src": "342:244:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "613:145:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 48,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "631:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31363835323836303030",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "637:10:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1685286000_by_1",
																	"typeString": "int_const 1685286000"
																},
																"value": "1685286000"
															},
															"src": "631:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546865207370656369666965642074696d65206861736e27742079657420706173736564",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "649:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b2f8845a2f33c2a3301aba1713f35da97b2ab7e7bbe02d488edc3f33f6c135c",
																"typeString": "literal_string \"The specified time hasn't yet passed\""
															},
															"value": "The specified time hasn't yet passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b2f8845a2f33c2a3301aba1713f35da97b2ab7e7bbe02d488edc3f33f6c135c",
																"typeString": "literal_string \"The specified time hasn't yet passed\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															90,
															91
														],
														"referencedDeclaration": 91,
														"src": "623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "623:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "623:65:0"
											},
											{
												"id": 54,
												"nodeType": "PlaceholderStatement",
												"src": "750:1:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"name": "checkTime",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:0"
									},
									"src": "592:166:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "804:115:0",
										"statements": [
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"name": "award",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "814:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 63,
																	"name": "totalMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "828:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "839:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "828:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 66,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "827:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "844:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "827:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "814:32:0"
											}
										]
									},
									"documentation": null,
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 59,
											"modifierName": {
												"argumentTypes": null,
												"id": 58,
												"name": "checkTime",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 56,
												"src": "794:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "794:9:0"
										}
									],
									"name": "makeTheDraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "784:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:0"
									},
									"scope": 72,
									"src": "764:155:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 73,
							"src": "26:895:0"
						}
					],
					"src": "0:921:0"
				},
				"id": 0
			}
		}
	}
}